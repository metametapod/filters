#!/bin/sh
set -o errexit -o nounset

TMP_SCRIPT_DIR="$(mktemp -d)"

escape_xargs() {
    sed 's/[''"\\]/\\&/g'
}

# See https://unix.stackexchange.com/a/209744
escape_re() {
    sed 's/[.[\*^$]/\\&/g'
}

escape_re_perl() {
   escape_xargs | xargs printf '\\Q%s\\E\n'
}

join_as_re_group() {
    escape_xargs | xargs printf "%s\n" | paste -sd "|" -
}

init() (
    # Exclude any domain with built-in opt-out rules in Firefox.
    excluded_domains="$(jq -r ".data | map(select( .cookies.optOut != null or .click.optOut != null ) | .domains.[]) | join(\"\n\")" upstream/mozilla/cookie-banner-rules-list/cookie-banner-rules-list.json | sort -u)"

    # Avoid "Argument list too long" error by using temporary file for regex.
    cat <<EOF > "$TMP_SCRIPT_DIR/public_suffix_domain_re.txt"
^[^\\.]+\\.(?:$(rg -v "^//|^\$" upstream/mozilla/publicsuffix/public_suffix_list.dat | escape_re | join_as_re_group | escape_xargs))\$
EOF

    # Naked domains should have subdomains excluded as well.
    excluded_naked_domains="$(printf "%s\n" "$excluded_domains" | rg -f "$TMP_SCRIPT_DIR/public_suffix_domain_re.txt" | rg -v "^www\.")"

    # Escape for use in rg.
    excluded_domains_escaped_grep="$(printf "%s\n" "$excluded_domains" | escape_re)$(printf "%s\n" "$excluded_naked_domains" | escape_re | escape_xargs | xargs printf '(?:[A-Za-z0-9\\-]+\\.)+%s\n')"

    # Single-domain exclusions can be filtered by grep/ripgrep.
    # https://github.com/gorhill/uBlock/wiki/Static-filter-syntax
    cat <<EOF >"$TMP_SCRIPT_DIR/exclude_regexps.txt"
$(printf "%s\n" "$excluded_domains_escaped_grep" | sed 's/.*/^&##.*$/')
$(printf "%s\n" "$excluded_domains_escaped_grep" | sed 's/.*/^\\|\\|.*(?:\\$|,)domain=&$/')
$(printf "%s\n" "$excluded_domains_escaped_grep" | sed 's/.*/^[^!@].*,domain=&$/')
$(printf "%s\n" "$excluded_domains_escaped_grep" | sed 's/.*/^\\|?\\|?&\\b(?:[^\\.][^#]+|\\^)?$/')
EOF

    # Multi-domain exclusions must be filtered by perl or sed.
    while read -r cmd; do
        printf "%s\n" "$excluded_domains" | escape_re_perl | join_as_re_group | escape_xargs | xargs printf '(?:%s)\n' | sed "s_.*_1 while ${cmd}_"
        printf "%s\n" "$excluded_naked_domains" | escape_re_perl | join_as_re_group | escape_xargs | xargs printf '(?:[A-Za-z0-9\\-]+\\.)+(?:%s)\n' | sed "s_.*_1 while ${cmd}_"
    done <<EOF >"$TMP_SCRIPT_DIR/substitution_commands.txt"
s/^(.*)&,(.*##.*)$/\$1\$2/g;
s/^(.*),&(##.*)$/\$1\$2/g;
s/^(?<!@@)((?:.*\\\\$|.*\\\\\$script,)domain=.*)(?:&\\\\|)(.*)$/\$1\$2/g;
s/^(?<!@@)((?:.*\\\\$|.*\\\\\$script,)domain=.*)(?:\\\\|&)$/\$1/g;
s/^(\\\\|?\\\\|?)&,[^#]+$/\$1\$2/g;
s/^(\\\\|?\\\\|?),&[^#]+$/\$1\$2/g;
EOF
)

transform_rules() {
    cat -- "$@" > "$TMP_SCRIPT_DIR/rules.txt"
    perl -p "$TMP_SCRIPT_DIR/substitution_commands.txt" <"$TMP_SCRIPT_DIR/rules.txt" |
    rg -v -f "$TMP_SCRIPT_DIR/exclude_regexps.txt"
}

write_filter() {
    cat - > "$TMP_SCRIPT_DIR/filter.txt"
    ./scripts/update_filter "$TMP_SCRIPT_DIR/filter.txt" "$1"
}

main() (
    init
    modified_at="$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
    outdir="generated/combined"
    outpath="$outdir/fxcookies-easylist-ubo.txt"
    mkdir -p "$outdir"
    printf "Generating '%s' (may take some time)...\n" "$outpath"
    transform_rules upstream/easylist/cookies.txt upstream/ubo/annoyances-cookies.txt >"$TMP_SCRIPT_DIR/basefilters.txt"
    write_filter <<EOF "$outpath"
! Title: EasyList/uBO Cookie Notices (optimized for Firefox) [beta]
! Expires: 1 day (update frequency)
! Last modified: $modified_at
! License: https://raw.githubusercontent.com/uBlockOrigin/uAssets/master/LICENSE
! Description: |
!   EasyList and uBlock Origin cookie notice filters, excluding sites that have
!   opt out rules already handled by Firefox's built-in cookie banner blocking.
!
!   NOTE: still in development, use at your own discretion.
$(cat "$TMP_SCRIPT_DIR/basefilters.txt")
EOF
    outpath="$outdir/fxcookies-adguard-easylist-ubo.txt"
    printf "Generating '%s' (may take some time)...\n" "$outpath"
    write_filter <<EOF "$outpath"
! Title: AdGuard/EasyList/uBO Cookie Notices (optimized for Firefox) [beta]
! Expires: 1 day (update frequency)
! Last modified: $modified_at
! License: https://raw.githubusercontent.com/uBlockOrigin/uAssets/master/LICENSE
! Description: |
!   AdGuard, EasyList and uBlock Origin cookie notice filters, excluding sites
!   that have opt out rules already handled by Firefox's built-in cookie
!   banner blocking.
!
!   NOTE: still in development, use at your own discretion.
$(cat "$TMP_SCRIPT_DIR/basefilters.txt")
$(transform_rules upstream/adguard/annoyances-cookies.txt)
EOF

    echo "Done."
)

trap 'nohup rm -rf "$TMP_SCRIPT_DIR" >/dev/null 2>&1 &' EXIT HUP INT QUIT TERM
main
